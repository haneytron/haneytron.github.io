<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compiler on David Haney - Blogging About .NET Core &amp; Engineering Management</title>
    <link>https://www.davidhaney.io/tags/compiler/</link>
    <description>Recent content in Compiler on David Haney - Blogging About .NET Core &amp; Engineering Management</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>David Haney</copyright>
    <lastBuildDate>Sun, 29 Sep 2024 17:27:07 -0400</lastBuildDate>
    <atom:link href="https://www.davidhaney.io/tags/compiler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Compiler Tricks - Inferred Types</title>
      <link>https://www.davidhaney.io/compiler-tricks-inferred-types/</link>
      <pubDate>Mon, 16 Jul 2012 00:33:54 +0000</pubDate>
      <guid>https://www.davidhaney.io/compiler-tricks-inferred-types/</guid>
      <description>&lt;p&gt;The .NET compiler is a terrific thing… After all, it turns your C# into an executable program!&lt;/p&gt;&#xA;&lt;p&gt;One nice feature of the .NET compiler, which is becoming better each release, is inferred typing. I’d like to lay out a few short examples that might help you develop your programming standards and practices.&lt;/p&gt;&#xA;&lt;p&gt;Inferring a type when creating an array.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// Create and initialize an array&#xD;&#xA;var myArray = new int[] { 1, 2, 3 };&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Becomes:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
